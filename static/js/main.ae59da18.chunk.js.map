{"version":3,"sources":["Table/Table.module.css","Table/NewPerson/NewPerson.module.css","Table/Pagination/Pagination.module.css","Table/Filter/Filter.module.css","Table/Rows/Rows.jsx","Table/Head/Head.jsx","Table/Filter/Filter.jsx","Table/Pagination/Pagination.jsx","Table/Info/Info.jsx","Table/NewPerson/NewPerson.jsx","Table/Loader/Loader.jsx","Table/Table.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Rows","props","persons","tableHeader","pagesIntervals","page","setInfoVisibility","setSelectedPersonId","partOfPersons","slice","map","person","className","styles","tr","key","id","phone","onClick","el","index","td","Head","sortTable","sortTo","sortField","Filter","filterTable","useState","value","setValue","filter","onChange","event","target","type","trim","Pagination","numberOfPages","setPage","pages","i","style","wrapper","btn","Info","selectedPersonId","selectedPerson","_","find","marginBottom","firstName","defaultValue","description","cols","rows","address","streetAddress","city","state","zip","NewPerson","setPersons","formVisibility","setFormVisibility","addBtnVisibility","setAddBtnVisibility","setId","setFirstName","lastName","setLastName","email","setEmail","setPhone","copyPersons","concat","newPersonObj","formIsRequired","newPerson","addBtnUp","action","e","addBtnDown","unshift","Table","requestURL","useEffect","fetch","then","response","json","orderBy","setLoading","catch","console","error","prevPersons","setPrevPersons","setSortTo","setSortField","infoVisibility","loading","Math","ceil","length","nRows","nPages","intervals","start","end","takeIntervals","filterPersons","o","includes","table","sortType","sortPersons","App","showSmall","setShowSmall","showLarge","setShowLarge","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ae59da18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__1yStV\",\"tr\":\"Table_tr__3lCsL\",\"td\":\"Table_td__1M_YW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPerson\":\"NewPerson_newPerson__2LbM8\",\"addBtnUp\":\"NewPerson_addBtnUp__GT6qh\",\"addBtnDown\":\"NewPerson_addBtnDown__3akJg\",\"wrapper\":\"NewPerson_wrapper__ofq7l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Pagination_wrapper__3uN-F\",\"btn\":\"Pagination_btn__1dg5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__20r2K\"};","import React from \"react\";\r\nimport styles from '../Table.module.css'\r\n\r\n\r\nexport default function Rows(props) {\r\n    const { persons, tableHeader, pagesIntervals, page, setInfoVisibility, setSelectedPersonId } = props;\r\n    const partOfPersons = persons.slice(pagesIntervals[page-1][0], pagesIntervals[page-1][1]+1);\r\n\r\n    return (\r\n        <>\r\n            {partOfPersons.map(person => {\r\n                return (\r\n                    <div className={ styles.tr }\r\n                         key={person.id + person.phone}\r\n                         onClick={() => {\r\n                            setInfoVisibility(true);\r\n                            setSelectedPersonId(person.id);\r\n                    }}>\r\n                        {tableHeader.map((el, index) => <div className={ styles.td } key={index}>{person[el]}</div>)}\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"../Table.module.css\";\r\n\r\nexport default function Head(props) {\r\n    const {tableHeader, sortTable, sortTo, sortField} = props;\r\n\r\n    return (\r\n        <div className={styles.tr}>\r\n            {tableHeader.map((el,index) =>\r\n                <div className={styles.td} key={index}>\r\n                    <span onClick={() => sortTable(el) }>{el}</span>\r\n                    &nbsp;\r\n                    <span>{sortField === el ? (sortTo === 'asc' ? '▲' : '▼') : ''}</span>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport styles from './Filter.module.css'\r\n\r\nexport default function Filter(props) {\r\n    const {filterTable} = props;\r\n    const [value, setValue] = useState('');\r\n    return (\r\n        <div className={styles.filter}>\r\n            <div>Search by value</div>\r\n            <input value={value} onChange={event => setValue(event.target.value)}/>\r\n            <button className='btn btn-secondary' type='button' onClick={() => {\r\n                if (value.trim() !== '') {\r\n                    filterTable(value);\r\n                } else filterTable('goToPrev');\r\n\r\n            } }>Search</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Pagination.module.css'\r\n\r\nexport default function Pagination(props) {\r\n    const {numberOfPages, setPage} = props;\r\n    const pages = [];\r\n\r\n    for (let i = 0; i < numberOfPages; i++) {\r\n        pages[i] = i + 1;\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            {numberOfPages > 1 && pages.map(page => <button className={style.btn + ' btn btn-light'}\r\n                                                            key={page}\r\n                                                            onClick={() => setPage(page)}>{page}</button>)}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport _ from 'lodash'\r\n\r\nexport default function Info(props) {\r\n    const {selectedPersonId, persons} = props;\r\n    const selectedPerson = _.find(persons, ['id', selectedPersonId]);\r\n    return (\r\n        <div className=\"Info\" style={{marginBottom: '20px'}}>\r\n            <div>User selected: <b>{selectedPerson.firstName}</b></div>\r\n            <div>\r\n                Description: <br/>\r\n                <textarea defaultValue={selectedPerson.description} cols={70} rows={3}/>\r\n            </div>\r\n            <div>Address: <b>{selectedPerson.address.streetAddress}</b></div>\r\n            <div>City: <b>{selectedPerson.address.city}</b></div>\r\n            <div>State: <b>{selectedPerson.address.state}</b></div>\r\n            <div>Zip code: <b>{selectedPerson.address.zip}</b></div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport styles from './NewPerson.module.css'\r\n\r\nexport default function NewPerson(props) {\r\n    const {setPersons, persons} = props;\r\n    const [formVisibility, setFormVisibility] = useState(false);\r\n    const [addBtnVisibility, setAddBtnVisibility] = useState(true)\r\n    const [id, setId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n    const copyPersons = persons.concat();\r\n    const newPersonObj = {id, firstName, lastName, email, phone};\r\n    let formIsRequired = false;\r\n    if (id !== '' && firstName !== '' && lastName !== '' && email !== '' && phone !== '') {\r\n        formIsRequired = true;\r\n    }\r\n    return (\r\n        <div className={styles.newPerson}>\r\n            {addBtnVisibility === true && <button className={styles.addBtnUp + ' btn btn-secondary'} onClick={() => {\r\n                setFormVisibility(true);\r\n                setAddBtnVisibility(false);\r\n            }}>Add person</button>}\r\n            {formVisibility === true && <form action=\"#\">\r\n                <div className={styles.wrapper}>\r\n                    <div>id</div>\r\n                    <div>firstName</div>\r\n                    <div>lastName</div>\r\n                    <div>email</div>\r\n                    <div>phone</div>\r\n                </div>\r\n                <div className={styles.wrapper}>\r\n                    <input type=\"text\" value={id} onChange={e => setId(e.target.value.trim())}/>\r\n                    <input type=\"text\" value={firstName} onChange={e => setFirstName(e.target.value)}/>\r\n                    <input type=\"text\" value={lastName} onChange={e => setLastName(e.target.value)}/>\r\n                    <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                    <input type=\"tel\" value={phone} onChange={e => setPhone(e.target.value)}/>\r\n                </div>\r\n                {formIsRequired && <button className={styles.addBtnDown + ' btn btn-secondary'} onClick={() => {\r\n                    copyPersons.unshift(newPersonObj);\r\n                    setPersons(copyPersons);\r\n                    setId('');\r\n                    setFirstName('');\r\n                    setLastName('');\r\n                    setEmail('');\r\n                    setPhone('');\r\n                    setFormVisibility(false);\r\n                    setAddBtnVisibility(true);\r\n                }}>Add person</button>}\r\n            </form>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport './Loader.css'\r\n\r\nexport default () => {\r\n    return (\r\n        <div className='wrapper'>\r\n            <div className=\"lds-ring\">\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport styles from './Table.module.css'\r\nimport Rows from \"./Rows/Rows\";\r\nimport Head from \"./Head/Head\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Pagination from \"./Pagination/Pagination\";\r\nimport _ from \"lodash\";\r\nimport Info from \"./Info/Info\";\r\nimport NewPerson from \"./NewPerson/NewPerson\";\r\nimport Loader from \"./Loader/Loader\";\r\n\r\nexport default function Table(props) {\r\n    const {requestURL} = props;\r\n\r\n    useEffect(() => {\r\n        fetch(requestURL)\r\n            .then(response => response.json())\r\n            .then(persons => {\r\n                setPersons(_.orderBy(persons, 'id', 'asc'));\r\n                setLoading(false)})\r\n            .catch(e => console.error(e))\r\n    }, []);\r\n\r\n    const [persons, setPersons] = useState([]);\r\n    const [prevPersons, setPrevPersons] = useState([]);\r\n    const [sortTo, setSortTo] = useState('asc');\r\n    const [sortField, setSortField] = useState('id');\r\n    const [page, setPage] = useState(1);\r\n    const [infoVisibility, setInfoVisibility] = useState(false);\r\n    const [selectedPersonId, setSelectedPersonId] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const tableHeader = ['id', 'firstName', 'lastName', 'email', 'phone'];\r\n    const rowsPerPage = 50;\r\n    const numberOfPages = Math.ceil(persons.length / rowsPerPage);\r\n    const pagesIntervals = takeIntervals(rowsPerPage, numberOfPages);\r\n\r\n    function takeIntervals(nRows, nPages) {\r\n        const intervals = [];\r\n        let start = 0;\r\n        let end = nRows - 1;\r\n        for (let i = 0; i <= nPages; i++) {\r\n            intervals[i] = [start, end];\r\n            start += nRows;\r\n            end += nRows;\r\n        }\r\n        return intervals;\r\n    }\r\n\r\n    function sortTable(sortField) {\r\n        const copyPersons = persons.concat();\r\n        const sortType = sortTo === 'asc' ? 'desc' : 'asc';\r\n        const sortPersons = _.orderBy(copyPersons, sortField, sortType);\r\n        setSortField(sortField);\r\n        setPersons(sortPersons);\r\n        setSortTo(sortType);\r\n    }\r\n\r\n    function filterTable(value) {\r\n        const copyPersons = persons.concat();\r\n        setPrevPersons(copyPersons);\r\n        if (value !== 'goToPrev') {\r\n            const filterPersons = _.filter(copyPersons, function (o) {\r\n                return !!(o.firstName.includes(value) || o.lastName.includes(value) || o.email.includes(value) || o.phone.includes(value));\r\n            })\r\n            setPersons(filterPersons);\r\n        } else if (prevPersons.length !== 0) setPersons(prevPersons);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NewPerson setPersons={setPersons} persons={persons}/>\r\n            <Filter filterTable={filterTable}/>\r\n            <div className={styles.table}>\r\n                <Head tableHeader={tableHeader}\r\n                      sortTable={sortTable}\r\n                      sortTo={sortTo}\r\n                      sortField={sortField}/>\r\n                <Rows tableHeader={tableHeader}\r\n                      persons={persons}\r\n                      pagesIntervals={pagesIntervals}\r\n                      page={page}\r\n                      setInfoVisibility={setInfoVisibility}\r\n                      setSelectedPersonId={setSelectedPersonId}/>\r\n            </div>\r\n            {loading ? <Loader/> : null}\r\n            {infoVisibility && <Info selectedPersonId={selectedPersonId} persons={persons}/>}\r\n            <Pagination numberOfPages={numberOfPages} setPage={setPage}/>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport Table from \"./Table/Table\";\r\n\r\nfunction App() {\r\n    const smallRequestURL = 'http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\r\n    const largeRequestURL = 'http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D';\r\n    const [showSmall, setShowSmall] = useState(false);\r\n    const [showLarge, setShowLarge] = useState(false);\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <h1 style={{marginBottom: '20px'}}>Test task</h1>\r\n            <div className='dataset-size-btns'>\r\n                <button className=\"btn btn-info\" onClick={() => {setShowLarge(true);setShowSmall(false);}}>Large dataset</button>\r\n                <button className=\"btn btn-light\" onClick={() => {setShowSmall(true);setShowLarge(false);}}>Small dataset</button>\r\n            </div>\r\n            {showSmall && <Table requestURL={smallRequestURL}/>}\r\n            {showLarge && <Table requestURL={largeRequestURL}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}